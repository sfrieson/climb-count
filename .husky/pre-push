#!/usr/bin/env sh
. "$(dirname "$0")/_/h"

echo "üßó Running E2E tests before push..."

# Check if dev server is already running on port 8000
if ! curl -s http://localhost:8000 > /dev/null 2>&1; then
  echo "üì° Starting dev server for E2E tests..."
  npm run dev > /dev/null 2>&1 &
  DEV_SERVER_PID=$!
  
  # Wait for server to be ready
  echo "‚è≥ Waiting for dev server to start..."
  for i in {1..30}; do
    if curl -s http://localhost:8000 > /dev/null 2>&1; then
      echo "‚úÖ Dev server is ready"
      break
    fi
    sleep 1
  done
  
  # Check if server started successfully
  if ! curl -s http://localhost:8000 > /dev/null 2>&1; then
    echo "‚ùå Failed to start dev server"
    exit 1
  fi
  
  SERVER_STARTED_BY_HOOK=true
else
  echo "‚úÖ Dev server already running"
  SERVER_STARTED_BY_HOOK=false
fi

# Run E2E tests (headless by default)
echo "üß™ Running E2E tests..."
if command -v timeout > /dev/null; then
  timeout 300 npm run test:e2e
elif command -v gtimeout > /dev/null; then
  gtimeout 300 npm run test:e2e
else
  npm run test:e2e
fi

# Capture test exit code
TEST_EXIT_CODE=$?

# Clean up: kill dev server if we started it
if [ "$SERVER_STARTED_BY_HOOK" = true ] && [ ! -z "$DEV_SERVER_PID" ]; then
  echo "üßπ Cleaning up dev server..."
  kill $DEV_SERVER_PID > /dev/null 2>&1
  # Also kill any remaining Vite processes
  pkill -f "vite" > /dev/null 2>&1 || true
fi

# Exit with test result
if [ $TEST_EXIT_CODE -ne 0 ]; then
  echo "‚ùå E2E tests failed! Push cancelled."
  exit 1
else
  echo "‚úÖ E2E tests passed! Proceeding with push..."
  exit 0
fi